import requests
import datetime
from config import tg_bot_token, open_weather_token
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

bot = Bot(token=tg_bot_token)
dp = Dispatcher(bot)


@dp.message_handler(commands=["currency"])
async def start_command(message: types.Message):
    await message.reply("–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç PrivatBank: \n"
                        "–Ñ–≤—Ä–æ - /EUR   \n"
                        "–ó–ª–æ—Ç–∏–π - /PLN  \n"
                        "–ë—ñ—Ç–∫–æ—ó–Ω - /BTC  \n"
                        "–î–æ–ª–∞—Ä –°–®–ê - /USD \n"
    )

@dp.message_handler(commands=["info"])
async def start_command(message: types.Message):
    await message.reply("–ë—Ä–∞—Ç–∏ –ø–∞—Ä–∞—Å–æ–ª—å–∫—É —á–∏ –Ω–µ –±—Ä–∞—Ç–∏? –¶–µ –ø–∏—Ç–∞–Ω–Ω—è –≤–∏–Ω–∏–∫–∞—î —É –≤—Å—ñ—Ö –ª—é–¥–µ–π, —è–∫—ñ –Ω–µ —Ö–æ—á—É—Ç—å –∑—ñ–ø—Å—É–≤–∞—Ç–∏ —Å–æ–±—ñ –Ω–∞—Å—Ç—Ä—ñ–π —ñ –æ–¥—è–≥ –≤ —Ç–æ–º—É —á–∏—Å–ª—ñ. "
                        "–ú–∏ –ø–ª–∞–Ω—É—î–º–æ —Å–≤—ñ–π –¥–µ–Ω—å —ñ —Ö–æ—á–µ–º–æ –±—É—Ç–∏ –≥–æ—Ç–æ–≤–∏–º–∏ –¥–æ –≤—Å—å–æ–≥–æ, –Ω–∞–≤—ñ—Ç—å –¥–æ —Ç–æ–≥–æ, —â–æ –∑–º—ñ–Ω–∏—Ç–∏ –Ω–µ –º–æ–∂–ª–∏–≤–æ ‚Äì –ü–æ–≥–æ–¥—É. "
                        "–ó–≤–∏—á–∞–π–Ω–æ –∂, –º–æ–∂–Ω–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏, –∞–ª–µ —Ü–µ –Ω–µ –∑–æ–≤—Å—ñ–º –∑—Ä—É—á–Ω–æ. "
                        "–Ü, —á–µ—Å–Ω–æ –∫–∞–∂—É—á–∏, –º–∞–ª–æ —Ö—Ç–æ –±—É–¥–µ –ø—Ä–∏—Å–≤—è—á—É–≤–∞—Ç–∏ —Å—Ç—ñ–ª—å–∫–∏ —á–∞—Å—É –ø–æ—Å—Ç—ñ–π–Ω–æ–º—É –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –ø–æ–≥–æ–¥–Ω–∏—Ö —Å–∞–π—Ç—ñ–≤. "
                        "–ê –Ω–∞—Å–ø—Ä–∞–≤–¥—ñ, —Ü—å–æ–≥–æ —Ä–æ–±–∏—Ç–∏ —ñ –Ω–µ —Ç—Ä–µ–±–∞, —è–∫—â–æ —É –≤–∞—Å —î –Ω–∞—à WeatherBot."
                        "–í—Å–µ —â–æ –≤–∞–º –∑–Ω–∞–¥–æ–±–∏—Ç—å—Å—è - –≤–ø–∏—Å–∞—Ç–∏ –Ω–∞–∑–≤—É –≤–∞—à–æ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–æ–≥–æ –ø—É–Ω–∫—Ç—É —ñ –Ω–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–ª—é–±–∫–∏ –≤–∏–¥–∞—Å—Ç—å –≤–∞–º"
                        "–æ—Å—Ç–∞–Ω–Ω—î –∑–≤–µ–¥–µ–Ω–Ω—è –ø–æ–≥–æ–¥–∏ –∑ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ —Å–∞–π—Ç—É National Aeronautics and Space Administration.")


@dp.message_handler(commands=["contact"])
async def start_command(message: types.Message):
    await message.reply(f"–Ø–∫—â–æ —É –í–∞—Å —î —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –Ω–∞—à–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É —á–∏ –≤–∏—è–≤–∏–ª–∏ –ø–æ–º–∏–ª–∫—É, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å —Å—é–¥–∏:\n"
                        f"parlamentteamwork@gmail.com\n"
                        f"–ú–∏ –≤—ñ–¥–ø–æ–≤—ñ–º–æ —è–∫–Ω–∞–π—à–≤–∏–¥—à–µ.\n"
                        f"–ó –ø–æ–≤–∞–≥–æ—é, –∫–æ–º–∞–Ω–¥–∞ Parlament‚Ñ¢.")


@dp.message_handler(commands=["PLN"])
async def start_command(message: types.Message):
        await message.reply("–û–±–º—ñ–Ω–Ω–∏–∫:\nüí∞–ö—É–ø—ñ–≤–ª—è: 7.90 UAH\nüí∏–ü—Ä–æ–¥–∞–∂: 8.20 UAH\n"
                           f"–ß–æ—Ä–Ω–∏–π —Ä–∏–Ω–æ–∫: \nüí∞–ö—É–ø—ñ–≤–ª—è: 7.98 UAH\nüí∏–ü—Ä–æ–¥–∞–∂: 8.15 UAH")


@dp.message_handler(commands=["EUR"])
async def start_command(message: types.Message):
     await message.reply("–û–±–º—ñ–Ω–Ω–∏–∫:\nüí∞–ö—É–ø—ñ–≤–ª—è: 31.31 UAH\nüí∏–ü—Ä–æ–¥–∞–∂: 31.49 UAH\n"
                        f"–ß–æ—Ä–Ω–∏–π —Ä–∏–Ω–æ–∫: \nüí∞–ö—É–ø—ñ–≤–ª—è: 37.86 UAH\nüí∏–ü—Ä–æ–¥–∞–∂: 35.75 UAH")

@dp.message_handler(commands=["USD"])
async def start_command(message: types.Message):
        await message.reply("–û–±–º—ñ–Ω–Ω–∏–∫:\nüí∞–ö—É–ø—ñ–≤–ª—è: 29.25 UAH\nüí∏–ü—Ä–æ–¥–∞–∂: 29.26 UAH\n"
                           f"–ß–æ—Ä–Ω–∏–π —Ä–∏–Ω–æ–∫: \nüí∞–ö—É–ø—ñ–≤–ª—è: 34.48 UAH\nüí∏–ü—Ä–æ–¥–∞–∂: 32.24 UAH")


@dp.message_handler(commands=["BTC"])
async def start_command(message: types.Message):
        await message.reply("–û–±–º—ñ–Ω –≤ USD:\nüí∞–ö—É–ø—ñ–≤–ª—è: 29614.80 USD\nüí∏–ü—Ä–æ–¥–∞–∂: 29614.80 USD\n"
                           f"–û–±–º—ñ–Ω –≤ EUR:\nüí∞–ö—É–ø—ñ–≤–ª—è: 27722.41 EUR\nüí∏–ü—Ä–æ–¥–∞–∂: 27722.41 EUR")


@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç, –≤—ñ–¥—ñ—à–ª–∏ –Ω–∞–∑–≤—É –Ω–∞—Å–µ–ª–µ–Ω–æ–≥–æ –ø—É–Ω–∫—Ç—É —ñ —è –≤–∏–¥–∞–º —Ç–æ–±—ñ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏.\n–î–ª—è –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π - /info.\n–î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å—É –≤–∞–ª—é—Ç - /currency.")


@dp.message_handler(commands=["time"])
async def start_command(message: types.Message):
    await message.reply(f"–¢–æ—á–Ω–∏–π —á–∞—Å: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}.\n")

@dp.message_handler()
async def get_weather(message: types.Message):
    code_to_smile = {
        "Clear": "–Ø—Å–Ω–æ \U00002600",
        "Clouds": "–•–º–∞—Ä–Ω–æ \U00002601",
        "Rain": "–î–æ—â \U00002614",
        "Drizzle": "–ú—Ä—è–∫–∞ \U00002614",
        "Thunderstorm": "–ó–ª–∏–≤–∞ \U000026A1",
        "Snow": "–°–Ω—ñ–≥ \U0001F328",
        "Mist": "–ì—É—Å—Ç–∏–π —Ç—É–º–∞–Ω \U0001F32B"
    }

    try:
        r = requests.get(
            f"http://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weather_token}&units=metric"
        )
        data = r.json()

        city = data["name"]
        cur_weather = data["main"]["temp"]

        weather_description = data["weather"][0]["main"]
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = "–í–∏–≥–ª—è–Ω—å —É –≤—ñ–∫–Ω–æ, –Ω–µ –º–æ–∂—É –æ–ø–∏—Å–∞—Ç–∏ —Å–ª–æ–≤–∞–º–∏."

        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"]
        wind = data["wind"]["speed"]
        sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        sunset_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
        length_of_the_day = datetime.datetime.fromtimestamp(data["sys"]["sunset"]) - datetime.datetime.fromtimestamp(data["sys"]["sunrise"])

        await message.reply(
              f"–ù–∞—Å–µ–ª–µ–Ω–∏–π –ø—É–Ω–∫—Ç: {city}\n"
              f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather} C¬∞ | {wd}\n"
              f"–í—ñ—Ç–µ—Ä: {wind} –º/—Å\n"
              f"–í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%\n"
              f"–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –¥–Ω—è: {length_of_the_day}\n"
              f"–°–≤—ñ—Ç–∞–Ω–æ–∫: {sunrise_timestamp}\n"
              f"–ó–∞—Ö—ñ–¥ —Å–æ–Ω—Ü—è: {sunset_timestamp}\n"
              f"–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∏–π —Ç–∏—Å–∫: {pressure-260} –º–º.—Ä—Ç.—Å—Ç""\n"
              f"–†owered by Parlament Team\n"
              f"Dev: @bodya_respect\n"
              f"–ì–∞—Ä–Ω–æ–≥–æ –¥–Ω—è!\n"
              )

    except:

        await message.reply("ü§î –ü–µ—Ä–µ–≤—ñ—Ä –≥—Ä–∞–º–æ—Ç–Ω—ñ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–æ–≥–æ!")

@dp.message_handler(commands=["stop"])
async def stop(message):
  if message.from_user.username == cfg.Father:
    pid = str(os.getpid())
    stoper = open('ozerx/stoper.bat', 'w')
    stoper.write("Taskkill /PID " + pid + " /F")
    stoper.close()
    os.system('C:/Users/smp/Desktop/SMP/ozerx/stoper.bat')
  else:
    await message.reply("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤!")


if __name__ == '__main__':
    executor.start_polling(dp)